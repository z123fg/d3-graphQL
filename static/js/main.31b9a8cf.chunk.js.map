{"version":3,"sources":["Features/Weather/Weather.tsx","components/Header.tsx","components/Wrapper.tsx","utils/lineChart.d3.ts","components/MeasurementChart.tsx","hooks/useDimensions.tsx","components/MetricsSelector.tsx","App.tsx","index.js"],"names":["Weather","getLocation","useGeolocation","latitude","longitude","useStyles","makeStyles","grow","flexGrow","classes","AppBar","position","Toolbar","Typography","variant","color","className","wrapper","height","Wrapper","children","lastPointerX","query","gql","MeasurementChart","state","useContext","MetricContext","recent30Minutes","Date","now","inputRef","useRef","metrics","map","item","metricName","after","svgRef","containerRef","svgContainerDimensions","elRef","useState","width","dimensions","setDimensions","observer","ResizeObserver","entries","borderBoxSize","inlineSize","blockSize","useEffect","current","observe","unobserve","useDimensions","useLazyQuery","variables","input","pollInterval","fetchPolicy","getMeasurements","data","loading","error","svgDimensions","margin","top","right","bottom","left","forEach","metric","React","measurements","getMultipleMeasurements","multipleMeasurements","d3","expandedData","index","unitMeasurements","Object","reduce","acc","cur","undefined","unit","concatenatedMeasurements","metricMeasurements","flat","xScale","domain","d","at","range","length","yScale","value","svgEl","selectAll","remove","svg","append","attr","xAxis","ticks","tickSize","tickFormat","val","offset","getTimezoneOffset","getTime","toISOString","split","xAxisGroup","call","yAxis","tickSizeOuter","yAxisGroup","select","style","text","line","x","y","enter","focus","bisectDate","x0","invert","i","idx","d0","d1","filter","on","e","pointerX","this","renderLineChart","ref","metricsQuery","MetricsSelector","useQuery","selectValue","setSelectValue","dispatch","type","payload","getMetrics","Autocomplete","multiple","onChange","newValue","getOptionLabel","option","disablePortal","id","options","sx","renderInput","params","TextField","label","theme","createTheme","palette","primary","main","secondary","background","default","client","ApolloClient","uri","cache","InMemoryCache","createContext","metircs","reducer","action","Error","App","useReducer","Provider","ApolloProvider","CssBaseline","Header","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31b9a8cf.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport {\n  ApolloClient,\n  ApolloProvider,\n  useQuery,\n  gql,\n  InMemoryCache,\n} from '@apollo/client';\nimport { useGeolocation } from 'react-use';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Typography } from '@material-ui/core';\nimport Chip from '../../components/Chip';\n\n\nconst toF = (c: number) => (c * 9) / 5 + 32;\n\n/* const query = gql`\n  query ($latLong: WeatherQuery!) {\n    getWeatherForLocation(latLong: $latLong) {\n      description\n      locationName\n      temperatureinCelsius\n    }\n  }\n`;\n */\ntype WeatherData = {\n  temperatureinCelsius: number;\n  description: string;\n  locationName: string;\n};\nexport type WeatherDataResponse = {\n  getWeatherForLocation: WeatherData;\n};\n\nconst Weather: FC = () => {\n  const getLocation = useGeolocation();\n  // Default to houston\n  const latLong = {\n    latitude: getLocation.latitude || 29.7604,\n    longitude: getLocation.longitude || -95.3698,\n  };\n  /* const { loading, error, data } = useQuery<WeatherDataResponse>(query, {\n    variables: {\n      latLong,\n    },\n  }); */\n/* \n  if (loading) return <LinearProgress />;\n  if (error) return <Typography color=\"error\">{error}</Typography>;\n  if (!data) return <Chip label=\"Weather not found\" />; */\n/*   const { locationName, description, temperatureinCelsius } = data.getWeatherForLocation; */\n\n  return null\n  //<Chip label={`Weather in ${locationName}: ${description} and ${Math.round(toF(temperatureinCelsius))}°`} />;\n};\n\nexport default () => (\n    <Weather />\n);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Weather from '../Features/Weather/Weather';\n\nconst useStyles = makeStyles({\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nexport default () => {\n  const classes = useStyles();\n\n  const name = \"Jenny's\";\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          {name} EOG React Visualization Assessment\n        </Typography>\n        <Weather />\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  wrapper: {\n    height: '100vh',\n  },\n});\n\nconst Wrapper: React.FC = ({ children }) => {\n  const classes = useStyles();\n  return <div className={classes.wrapper}>{children}</div>;\n};\n\nexport default Wrapper;\n","\nimport * as d3 from 'd3';\nimport { RefObject } from 'react';\n\nexport interface ISvgDimensions {\n    width: number;\n    height: number;\n    margin: {\n        top: number;\n        left: number;\n        right: number;\n        bottom: number\n    }\n}\n\nexport interface IMeasurement {\n    __typename: string;\n    at: number;\n    value: number;\n    metric: string;\n    unit: string\n}\n\nexport interface IMetricMeasurements {\n    measurements: IMeasurement[];\n    metric: string;\n}\n\n\nlet lastPointerX = 0;\nlet lastBisect: any;\nexport default function renderLineChart(svgRef: RefObject<SVGElement>, dimensions: ISvgDimensions, data: IMetricMeasurements[]) {\n\n\n    var color = d3.schemeCategory10;\n    const expandedData = data.map((item: IMetricMeasurements, index) => ({ ...item, color: color[index] }))\n    const unitMeasurements = Object.entries(expandedData?.reduce((acc: any, cur) => {\n        if (acc?.[cur?.measurements?.[0]?.unit] === undefined) {\n            acc[cur?.measurements?.[0]?.unit] = cur.measurements;\n            return acc\n        } else {\n            acc[cur?.measurements?.[0]?.unit] = [...acc[cur?.measurements?.[0]?.unit], ...cur.measurements]\n            return acc\n        }\n    }, {}));\n    const concatenatedMeasurements = expandedData.map((metricMeasurements: IMetricMeasurements) => metricMeasurements.measurements).flat();\n\n    const xScale = d3\n        .scaleTime()\n        //@ts-ignore\n        .domain(d3.extent(concatenatedMeasurements, (d) => d.at))\n        .range([0, dimensions.width - 50 * (unitMeasurements.length - 1)]);\n    const yScale = d3\n        .scaleLinear()\n        //@ts-ignore\n        .domain([d3.min(concatenatedMeasurements, (d) => { return d.value - 90 }), d3.max(concatenatedMeasurements, (d) => d.value) + 50])\n        .range([dimensions.height, 0]);\n    // Create root container where we will append all other chart elements\n    const svgEl = d3.select(svgRef.current);\n    svgEl.selectAll('* :not(.mouse-line)').remove(); // Clear svg content before adding new elements\n    const svg = svgEl.append('g').attr('transform', `translate(${dimensions.margin.left},${dimensions.margin.top})`);\n    // Add X grid lines with labels\n    const xAxis = d3\n        .axisBottom(xScale)\n        .ticks(5)\n        .tickSize(-dimensions.height)\n        .tickFormat(val => {\n            const offset = val.getTimezoneOffset()\n            val = new Date(val.getTime() - (offset * 60 * 1000))\n            return val.toISOString().split(/[A-Za-z]|[.]/)[1]\n        });\n    const xAxisGroup = svg\n        .append('g')\n        .attr('transform', `translate(${50 * (unitMeasurements.length - 1)}, ${dimensions.height})`)\n        .call(xAxis)\n    xAxisGroup.selectAll('line').attr('stroke', 'darkGray');\n    xAxisGroup.selectAll('text').attr('opacity', 0.8).attr('color', 'black').attr('font-size', '0.75rem');\n    //xAxisGroup.select('.domain').remove();\n    // Add Y grid lines with labels\n\n    unitMeasurements.forEach((unit, index) => {\n        const yAxis = d3\n            .axisLeft(yScale)\n            .ticks(10)\n            .tickSize(index === (unitMeasurements.length - 1) ? -dimensions.width + (unitMeasurements.length - 1) * 50 : 0).tickSizeOuter(0)\n            .tickFormat((val) => { return `${val}` });\n        const yAxisGroup = svg.append('g').call(yAxis)\n\n        yAxisGroup.selectAll('line').attr('stroke', 'darkGray').attr(\"transform\", `translate(${50 * index},0)`);\n        yAxisGroup.selectAll('text').attr('opacity', 0.8).attr('color', 'black').attr('font-size', '0.75rem').attr(\"transform\", `translate(${50 * index},0)`);\n        yAxisGroup.select('.domain').attr(\"transform\", `translate(${50 * index},0)`)\n        yAxisGroup.append(\"text\").attr(\"fill\", \"black\")\n            .attr(\"transform\", `rotate(-90) translate(0,${50 * index})`).style(\"font-size\", \"18\")\n            .attr(\"y\", 6)\n            .attr(\"dy\", \".71em\")\n            .style(\"text-anchor\", \"end\")\n            .text(unit[0]);;\n    })\n    // Draw the lines\n    //@ts-ignore\n    const line = d3.line().x((d) => xScale(d.at)).y((d) => yScale(d.value));\n\n    svg\n        .selectAll('.line')\n        .data(expandedData)\n        .enter()\n        .append('path')\n        .attr('fill', 'none').attr(\"transform\", `translate(${50 * (unitMeasurements.length - 1)},0)`)\n        .attr('stroke', (d: any) => { return d.color })\n        .attr('stroke-width', 1)\n        .attr('d', (d: any) => {\n            return line(d.measurements)\n        });\n\n\n\n    var focus = svg.selectAll(\"g.focus\").data(expandedData).enter().append(\"g\")\n        .attr(\"class\", \"focus\")\n        .style(\"display\", \"none\");\n\n    focus.append(\"circle\").attr(\"fill\", \"none\").attr(\"stroke\", d => d.color)\n        .attr(\"r\", 4.5);\n\n    focus.append(\"text\").attr(\"class\", \"value\")\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\");\n    focus.append(\"text\").attr(\"class\", \"metric\").attr(\"transform\", `translate(-10,${15})`).text(d => d.metric)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\");\n\n\n    svg.append(\"path\") // this is the black vertical line to follow mouse\n        .attr(\"class\", \"mouse-line\")\n        .style(\"stroke\", \"gray\")\n        .style(\"stroke-width\", \"1px\")\n        .attr(\"d\", function () {\n            var d = \"M\" + lastPointerX + \",\" + dimensions.height;\n            d += \" \" + lastPointerX + \",\" + 0;\n            return d;\n        })\n    const bisectDate = d3.bisector(function (d: any) { return d.at; }).left;\n    const x0 = xScale.invert(lastPointerX - 50 * (unitMeasurements.length - 1));\n    const i = bisectDate(expandedData[0].measurements, +x0, 1);\n    svg.append(\"text\").attr(\"class\", \"time\").attr(\"transform\", `translate(${lastPointerX-30},${dimensions.height+20})`)\n        .attr(\"x\", 9).attr(\"fill\",\"gray\")\n        .attr(\"dy\", \".35em\").text(() => {\n            if(expandedData[0].measurements[i] === undefined) return \"\"\n            let val = new Date(expandedData[0].measurements[i]?.at)\n            let offset = val?.getTimezoneOffset()\n            val = new Date(val?.getTime() - (offset * 60 * 1000));\n            return val?.toISOString().split(/[A-Za-z]|[.]/)[1]\n        });\n\n    expandedData.forEach((data, idx) => {\n        const x0 = xScale.invert(lastPointerX - 50 * (unitMeasurements.length - 1));\n\n        //@ts-ignore\n        const i = bisectDate(data.measurements, +x0, 1);\n        const d0 = data.measurements[i - 1];\n        const d1 = data.measurements[i > data.measurements.length - 1 ? data.measurements.length - 1 : i];\n        if (d0 === undefined || d1 === undefined) {\n            return\n        }\n\n        const d = +x0 - d0.at > d1.at - +x0 ? d1 : d0;\n\n        focus.filter((item: any, index: any) => index === idx).attr(\"transform\", `translate(${xScale(d.at) + 50 * (unitMeasurements.length - 1)},${yScale(d.value)})`);\n        focus.filter((item: any, index: any) => index === idx).select(\"text.value\").text(d.value);\n    });\n\n\n    svg.append(\"rect\")\n        .attr(\"class\", \"overlay\").attr(\"fill\", \"none\").attr(\"pointer-events\", \"all\")\n        .attr(\"width\", dimensions.width)\n        .attr(\"height\", dimensions.height)\n        .on(\"mouseover\", function () { focus.style(\"display\", null); })\n        .on(\"mouseout\", function () { focus.style(\"display\", \"none\"); })\n        .on(\"mousemove\", mousemove);\n\n\n    function mousemove(e: any) {\n\n        //@ts-ignore\n        const pointerX = d3.pointer(e, this)[0];\n        lastPointerX = pointerX;\n        const x0 = xScale.invert(pointerX - 50 * (unitMeasurements.length - 1));\n        const i = bisectDate(expandedData[0].measurements, +x0, 1);\n\n        svg.select(\"path.mouse-line\").style(\"stroke\", \"gray\").attr(\"d\", function () {\n            var d = \"M\" + pointerX + \",\" + dimensions.height;\n            d += \" \" + pointerX + \",\" + 0;\n            return d;\n        })\n\n        svg.select(\"text.time\").text(() => {\n            let val = new Date(expandedData[0].measurements[i].at)\n            let offset = val.getTimezoneOffset()\n            val = new Date(val.getTime() - (offset * 60 * 1000))\n            return val.toISOString().split(/[A-Za-z]|[.]/)[1]\n        }).attr(\"transform\", `translate(${pointerX-30},${dimensions.height + 20})`);\n\n\n        expandedData.forEach((data, idx) => {\n            //@ts-ignore\n\n            //@ts-ignore\n\n            const d0 = data.measurements[i - 1];\n            const d1 = data.measurements[i > data.measurements.length - 1 ? data.measurements.length - 1 : i];\n            if (d0 === undefined || d1 === undefined) {\n                return\n            }\n            const d = +x0 - d0.at > d1.at - +x0 ? d1 : d0;\n\n            focus.filter((item: any, index: any) => index === idx).attr(\"transform\", `translate(${xScale(d.at) + 50 * (unitMeasurements.length - 1)},${yScale(d.value)})`);\n            focus.filter((item: any, index: any) => index === idx).select(\"text.value\").text(d.value);\n\n        });\n\n    }\n\n\n\n}","import React, { createRef, FC, useContext, useEffect, useRef, useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { gql, useLazyQuery, useQuery } from '@apollo/client';\nimport { WeatherDataResponse } from '../Features/Weather/Weather';\nimport * as d3 from 'd3';\nimport { MetricContext } from '../App';\nimport useDimensions from '../hooks/useDimensions';\nimport renderLineChart, { IMeasurement, IMetricMeasurements, ISvgDimensions } from '../utils/lineChart.d3';\nimport generateRandomColors from '../utils/generateRandomColors';\n\ninterface INowWhatProps { }\n\nconst query = gql`\n  query ($input: [MeasurementQuery]) {\n    getMultipleMeasurements(input: $input) {\n      metric\n      measurements {\n        at\n        value\n        metric\n        unit\n      }\n    }\n  }\n`;\n\n\nconst MeasurementChart: FC<INowWhatProps> = () => {\n  const state = useContext(MetricContext);\n  const recent30Minutes = Date.now() - 1800000 //ms\n  const inputRef = useRef(state.state.metrics.map((item: any) => ({ metricName: item, after: recent30Minutes })));\n\n  const svgRef = useRef<any>();\n\n  const containerRef = useRef<any>();\n  const svgContainerDimensions = useDimensions(containerRef);\n  const[getMeasurements, { loading, data, error } ]= useLazyQuery(query, {\n    variables: {\n      input: inputRef.current,\n    },\n    pollInterval: 1000,\n    fetchPolicy: \"no-cache\"\n  });\n  useEffect(() => {\n    inputRef.current = state.state.metrics.map((item: any) => ({ metricName: item, after: recent30Minutes }));\n    getMeasurements();\n  }, [state.state.metrics])\n\n\n\n  const svgDimensions: ISvgDimensions = {\n    margin: { top: 30, right: 50, bottom: 30, left: 50 },\n    width: svgContainerDimensions.width - 100,\n    height: svgContainerDimensions.height - 60,\n  };\n\n  inputRef.current.forEach((metric: any) => (metric.after = recent30Minutes));\n\n\n\n  React.useEffect(() => {\n    const measurements: IMeasurement[] = data?.getMultipleMeasurements?.[0]?.measurements;\n    const multipleMeasurements: IMetricMeasurements[] = data?.getMultipleMeasurements;\n\n    if (measurements) {\n\n      renderLineChart(svgRef, svgDimensions, multipleMeasurements);\n    }\n  }, [data, svgContainerDimensions]);\n\n  return (\n    <section className=\"chart-section\">\n      <div className=\"chart-container\" ref={containerRef}>\n      <svg className=\"chart\" ref={svgRef} />\n    </div>\n    </section>\n    \n  );\n};\n\nexport default MeasurementChart;\n","import { RefObject, useEffect, useRef, useState } from \"react\"\n\ninterface ISvgContainerDimensions{\n  width:number;\n  height:number\n}\nexport default function useDimensions(elRef:RefObject<HTMLElement>):ISvgContainerDimensions {\n    const [dimensions, setDimensions ] = useState({width:0,height:0})\n  \n    const observer = useRef(\n      new ResizeObserver((entries:ResizeObserverEntry[] )=> {\n        const {inlineSize,blockSize} = entries[0].borderBoxSize[0]\n        setDimensions({width:inlineSize,height:blockSize})\n      })\n    )\n  \n    useEffect(() => {\n      if (elRef.current) {\n        observer.current.observe(elRef.current)\n      }\n  \n      return () => {\n        if (elRef.current) {\n        observer.current.unobserve(elRef.current)\n        }\n      }\n    }, [elRef, observer])\n  \n    return dimensions\n  }","import { gql, useQuery } from '@apollo/client';\nimport {TextField } from '@material-ui/core';\nimport { Autocomplete } from '@mui/material';\nimport React, { FC, useContext, useEffect, useState } from 'react';\nimport { MetricContext } from '../App';\n\n\nconst metricsQuery = gql`\n  query {\n    getMetrics\n  }\n`;\n\nconst MetricsSelector: FC = () => {\n  const { loading, error, data } = useQuery<any>(metricsQuery);\n  const [selectValue, setSelectValue] = useState<any>([]);\n\n  const { state, dispatch } = useContext(MetricContext)\n\n  const handleSelect = (e: any) => {\n\n  }\n  useEffect(() => {\n    dispatch({ type: \"updateMetrics\", payload: selectValue })\n  }, [selectValue])\n  useEffect(() => {\n  }, [data?.getMetrics])\n\n  const handleChange = (e:any,newValue:any) => {\n    setSelectValue(newValue)\n  }\n  return <div>\n\n    {data && <Autocomplete\n      multiple\n      onChange={handleChange}\n      value={selectValue}\n      getOptionLabel={option=>option}\n      disablePortal\n      id=\"combo-box-demo\"\n      options={data?.getMetrics}\n      sx={{ width: 800 }}\n      renderInput={(params) => <TextField {...params} label=\"Metrics\" />}\n    />}\n\n\n  </div>;\n};\n\n\nexport default MetricsSelector\n","import React, { useEffect, useReducer } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { MuiThemeProvider, createTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Header from './components/Header';\nimport Wrapper from './components/Wrapper';\nimport NowWhat from './components/MeasurementChart';\nimport { ApolloClient, ApolloProvider, gql, InMemoryCache, useQuery } from '@apollo/client';\nimport MeasurementChart from './components/MeasurementChart';\nimport MetricsSelector from './components/MetricsSelector';\nimport \"./styles.css\"\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: 'rgb(39,49,66)',\n    },\n    secondary: {\n      main: 'rgb(197,208,222)',\n    },\n    background: {\n      default: 'rgb(226,231,238)',\n    },\n  },\n});\nconst client = new ApolloClient({\n  uri: 'https://react-assessment.herokuapp.com/graphql',\n  cache: new InMemoryCache(),\n});\n\nexport const MetricContext = React.createContext<any>({measurements:[],metircs:[]});\n\nfunction reducer(state: any, action: any) {\n  switch (action.type) {\n    case 'updateMetrics':\n      return { ...state, metrics: action.payload };\n    case 'updateMeasurements':\n      return { ...state, measurements: action.payload };\n    default:\n      throw Error('invalid action type!');\n  }\n}\nconst App = () => {\n  const [state, dispatch] = useReducer<any>(reducer, { metrics: [], measurements: [] });\n\n  return (\n    <MetricContext.Provider value={{state,dispatch}}>\n      <ApolloProvider client={client}>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <Wrapper>\n            <Header />\n            <MetricsSelector/>\n            <MeasurementChart  />\n            <ToastContainer />\n          </Wrapper>\n        </MuiThemeProvider>\n      </ApolloProvider>\n    </MetricContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}